// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.21.5
// source: v1/ui_admin.proto

package v1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// UiAdminClient is the client API for UiAdmin service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type UiAdminClient interface {
	CreateAdmin(ctx context.Context, in *CreateAdminRequest, opts ...grpc.CallOption) (*CreateAdminReply, error)
}

type uiAdminClient struct {
	cc grpc.ClientConnInterface
}

func NewUiAdminClient(cc grpc.ClientConnInterface) UiAdminClient {
	return &uiAdminClient{cc}
}

func (c *uiAdminClient) CreateAdmin(ctx context.Context, in *CreateAdminRequest, opts ...grpc.CallOption) (*CreateAdminReply, error) {
	out := new(CreateAdminReply)
	err := c.cc.Invoke(ctx, "/api.ui.admin.v1.UiAdmin/CreateAdmin", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UiAdminServer is the server API for UiAdmin service.
// All implementations must embed UnimplementedUiAdminServer
// for forward compatibility
type UiAdminServer interface {
	CreateAdmin(context.Context, *CreateAdminRequest) (*CreateAdminReply, error)
	mustEmbedUnimplementedUiAdminServer()
}

// UnimplementedUiAdminServer must be embedded to have forward compatible implementations.
type UnimplementedUiAdminServer struct {
}

func (UnimplementedUiAdminServer) CreateAdmin(context.Context, *CreateAdminRequest) (*CreateAdminReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateAdmin not implemented")
}
func (UnimplementedUiAdminServer) mustEmbedUnimplementedUiAdminServer() {}

// UnsafeUiAdminServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to UiAdminServer will
// result in compilation errors.
type UnsafeUiAdminServer interface {
	mustEmbedUnimplementedUiAdminServer()
}

func RegisterUiAdminServer(s grpc.ServiceRegistrar, srv UiAdminServer) {
	s.RegisterService(&UiAdmin_ServiceDesc, srv)
}

func _UiAdmin_CreateAdmin_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateAdminRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UiAdminServer).CreateAdmin(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ui.admin.v1.UiAdmin/CreateAdmin",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UiAdminServer).CreateAdmin(ctx, req.(*CreateAdminRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// UiAdmin_ServiceDesc is the grpc.ServiceDesc for UiAdmin service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var UiAdmin_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "api.ui.admin.v1.UiAdmin",
	HandlerType: (*UiAdminServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAdmin",
			Handler:    _UiAdmin_CreateAdmin_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "v1/ui_admin.proto",
}
