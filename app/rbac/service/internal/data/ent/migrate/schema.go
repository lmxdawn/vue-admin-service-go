// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AdminColumns holds the columns for the "admin" table.
	AdminColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "tel", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "avatar", Type: field.TypeString},
		{Name: "sex", Type: field.TypeInt},
		{Name: "last_login_ip", Type: field.TypeString},
		{Name: "last_login_time", Type: field.TypeTime},
		{Name: "status", Type: field.TypeInt},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
	}
	// AdminTable holds the schema information for the "admin" table.
	AdminTable = &schema.Table{
		Name:       "admin",
		Columns:    AdminColumns,
		PrimaryKey: []*schema.Column{AdminColumns[0]},
	}
	// PermissionColumns holds the columns for the "permission" table.
	PermissionColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "role_id", Type: field.TypeInt},
		{Name: "permission_rule_id", Type: field.TypeInt},
		{Name: "type", Type: field.TypeString},
	}
	// PermissionTable holds the schema information for the "permission" table.
	PermissionTable = &schema.Table{
		Name:       "permission",
		Columns:    PermissionColumns,
		PrimaryKey: []*schema.Column{PermissionColumns[0]},
	}
	// PermissionRuleColumns holds the columns for the "permission_rule" table.
	PermissionRuleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "pid", Type: field.TypeInt},
		{Name: "name", Type: field.TypeString},
		{Name: "title", Type: field.TypeString},
		{Name: "status", Type: field.TypeInt},
		{Name: "condition", Type: field.TypeString},
		{Name: "sort", Type: field.TypeInt},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
	}
	// PermissionRuleTable holds the schema information for the "permission_rule" table.
	PermissionRuleTable = &schema.Table{
		Name:       "permission_rule",
		Columns:    PermissionRuleColumns,
		PrimaryKey: []*schema.Column{PermissionRuleColumns[0]},
	}
	// RoleColumns holds the columns for the "role" table.
	RoleColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt64, Increment: true},
		{Name: "name", Type: field.TypeString},
		{Name: "pid", Type: field.TypeInt},
		{Name: "status", Type: field.TypeInt},
		{Name: "remark", Type: field.TypeString},
		{Name: "sort", Type: field.TypeInt},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
	}
	// RoleTable holds the schema information for the "role" table.
	RoleTable = &schema.Table{
		Name:       "role",
		Columns:    RoleColumns,
		PrimaryKey: []*schema.Column{RoleColumns[0]},
	}
	// RoleAdminColumns holds the columns for the "role_admin" table.
	RoleAdminColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "role_id", Type: field.TypeInt},
		{Name: "admin_id", Type: field.TypeInt},
	}
	// RoleAdminTable holds the schema information for the "role_admin" table.
	RoleAdminTable = &schema.Table{
		Name:       "role_admin",
		Columns:    RoleAdminColumns,
		PrimaryKey: []*schema.Column{RoleAdminColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AdminTable,
		PermissionTable,
		PermissionRuleTable,
		RoleTable,
		RoleAdminTable,
	}
)

func init() {
	AdminTable.Annotation = &entsql.Annotation{
		Table: "admin",
	}
	PermissionTable.Annotation = &entsql.Annotation{
		Table: "permission",
	}
	PermissionRuleTable.Annotation = &entsql.Annotation{
		Table: "permission_rule",
	}
	RoleTable.Annotation = &entsql.Annotation{
		Table: "role",
	}
	RoleAdminTable.Annotation = &entsql.Annotation{
		Table: "role_admin",
	}
}
